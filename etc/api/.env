# =======================
# Docker service settings
# =======================
#
#   NEEDED_SERVICES
#   The services that are needed to make the container function
#
#   Note: this does not add their dependency to the container, it
#   just pauses the execution of this container until those services
#   are online and ready to receive connections.
#
#   Space delimited
#
#   Default: db:3306
NEEDED_SERVICES=db:5432

# ======================
# Rails service settings
# ======================
#
#   ENV
#   The environment to run the rails application in
#
#   Default: development
#
# ENV=development
RAILS_ENV=development

#   SECRET_TOKEN
#   A randomized token to use for Rails secret
#
#   Default (generated via): openssl rand -hex 64
#
# SECRET_TOKEN=${SECRET_TOKEN:-$(openssl rand -hex 64)}
#
#   RESQUE_QUEUES
#   A comma delimited, no whitespace list of worker queues to start

#   WEBSOCKETS_TOKEN
#   A token that for use with JWT secret
#
#   Default (generated via): openssl rand -base64 32
#
WEBSOCKETS_TOKEN=${WEBSOCKETS_TOKEN:-$(openssl rand -base64 32)}

# =================
# Database settings
# =================

#   The username for the database
#
#   Default: mysql
#
DB_USER=train

#   DB_PASS
#   The password for the database user
#
#   Default: none
#
DB_PASS=3fd5c2a0df1ce9dc01f0698adc57c72b

#   DB_HOST
#   The database host
#
#   Default: db
#
DB_HOST=db

#   DB_NAME
#   The name of the database for your application
#
#   Default: rails_db
#
DB_NAME=train_dev

#   DB_PORT
#   The port number for the database container
#
#   Default: 3306
#
DB_PORT=5432

#   DB_DRIVER
#   The type of database driver to use
#
#   Default: mysql2
#
DB_DRIVER=postgresql

#   DB_SNAPSHOT_DIR
#   The path to backup database snapshots to
#
#   Default: /srv/backup
#
DB_SNAPSHOT_DIR=/srv/backup

#   DB_WAIT_TIME
#   The amount of time to wait for the db service
#
#   Default: 60
#
DB_WAIT_TIME=60

#   DB_DUMP_COMMAND
#   The command to eval in order to run a dump of our database.
#
#   This command will be eval'd by our backup script and utilizes the
#   variable DB_SNAPSHOT_NAME to write out the name of the output file.
#
#   Default: null
#
DB_DUMP_COMMAND=pg_dump -U $DB_USER --no-password -h $DB_HOST -p $DB_PORT -d $DB_NAME > $DB_SNAPSHOT_NAME
